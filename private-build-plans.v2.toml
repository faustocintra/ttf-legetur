# docker run -e FONT_VERSION="dev" -it -v $(pwd):/build avivace/iosevka-build ttf::legetur

# ABCDEFGHIJKLMNOPQRSTUVWXYZ
# abcdefghijklmnopqrstuvwxyz
# 0123456789 !@#$%&*()+-[]{}^~;,?

[buildPlans.legetur]
family = "Legetur"
spacing = "normal"
serifs = "sans"
no-cv-ss = false
export-glyph-names = false

  [buildPlans.legetur.variants]
  inherits = "ss15"

    [buildPlans.legetur.variants.design]
    capital-a = "straight-serifless"
    capital-c = "unilateral-inward-serifed"
    capital-g = "toothed-inward-serifed-hooked"
    capital-j = "flat-hook-serifed"
    capital-k = "symmetric-connected-serifless"
    capital-q = "crossing-curly-tailed"
    capital-s = "unilateral-inward-serifed"
    capital-u = "toothless-corner-serifless"
    capital-w = "straight-asymmetric-serifless"
    a = "double-storey-serifless"
    b = "toothless-corner-serifless"
    c = "unilateral-inward-serifed"
    d = "toothed-serifless"
    f = "flat-hook-serifless"
    g = "double-storey-open"
    j = "flat-hook-serifed"
    k = "symmetric-connected-serifless"
    l = "serifed-flat-tailed"
    m = "serifless"
    q = "earless-corner-tailed-serifless"
    r = "corner-hooked-serifed"
    s = "unilateral-inward-serifed"
    t = "flat-hook"
    u = "toothed-serifless"
    w = "straight-asymmetric-serifless"
    y = "straight-turn-serifless"
    long-s = "flat-hook-tailed"
    eszet = "sulzbacher-descending-serifless"
    lower-eth = "straight-bar"
    lower-mu = "tailed-serifless"
    cyrl-capital-ka = "symmetric-connected-serifless"
    cyrl-ka = "symmetric-connected-serifless"
    cyrl-capital-ya = "straight-serifless"
    cyrl-ya = "straight-serifless"
    zero = "oval-tall-slashed-cutout"
    one = "no-base-long-top-serif"
    two = "straight-neck"
    three = "flat-top"
    four = "semi-open"
    # five = "oblique-upper-left-bar"
    six = "open-contour"
    seven = "bend-serifed"
    eight = "crossing-asymmetric"
    nine = "straight-bar"
    diacritic-dot = "square"
    punctuation-dot = "square"
    asterisk = "penta-mid"
    caret = "medium"
    paren = "large-contour"
    brace = "curly-flat-boundary"
    number-sign = "upright"
    ampersand = "upper-open"
    at = "compact"
    dollar = "interrupted-cap"
    cent = "bar-interrupted"

    [buildPlans.legetur.variants.italic]
    capital-a = "curly-serifless"
    capital-c = "serifless"
    capital-d = "more-rounded-serifless"
    capital-g = "toothless-rounded-serifless-hooked"
    capital-j = "descending-serifed"
    capital-k = "curly-serifless"
    capital-m = "slanted-sides-hanging-serifless"
    capital-n = "asymmetric-serifless"
    capital-q = "open-swash"
    capital-r = "curly-serifless"
    capital-s = "serifless"
    capital-u = "toothless-rounded-serifless"
    capital-v = "curly-serifless"
    capital-w = "curly-serifless"
    capital-x = "curly-serifless"
    capital-y = "curly-serifless"
    capital-z = "curly-serifless-with-crossbar"
    a = "single-storey-tailed"
    b = "toothless-corner-serifed"
    c = "serifless"
    d = "tailed-serifed"
    f = "flat-hook-diagonal-tailed"
    g = "single-storey-flat-hook-serifed"
    h = "tailed-motion-serifed"
    i = "serifed-diagonal-tailed"
    j = "diagonal-tailed-serifed"
    k = "diagonal-tailed-cursive-top-left-serifed"
    l = "serifed-diagonal-tailed"
    m = "tailed-top-left-serifed"
    n = "tailed-motion-serifed"
    p = "eared-motion-serifed"
    q = "diagonal-tailed-motion-serifed"
    r = "hookless-top-serifed"
    s = "serifless"
    t = "diagonal-tailed-short-neck2"
    u = "tailed-motion-serifed"
    v = "cursive-serifed"
    w = "cursive-serifed"
    x = "cursive"
    y = "cursive-flat-hook-motion-serifed"
    z = "cursive"
    lower-lambda = "curly-turn"
    lower-chi = "curly-serifless"
    cyrl-capital-ka = "curly-serifless"
    cyrl-ka = "curly-serifless"
    cyrl-em = "slanted-sides-flat-bottom-serifless"
    cyrl-capital-ya = "curly-serifless"
    cyrl-ya = "curly-serifless"
    seven = "bend-serifless"
    diacritic-dot = "round"
    punctuation-dot = "round"
    bar = "force-upright"

[buildPlans.legetur.weights.light]
shape = 300
menu = 300
css = 300

[buildPlans.legetur.weights.regular]
shape = 400
menu = 400
css = 400

[buildPlans.legetur.weights.medium]
shape = 500
menu = 500
css = 500

[buildPlans.legetur.weights.bold]
shape = 700
menu = 700
css = 700

[buildPlans.legetur.slopes.upright]
angle = 0
shape = "upright"
menu = "upright"
css = "normal"

[buildPlans.legetur.slopes.italic]
angle = 9.4
shape = "italic"
menu = "italic"
css = "italic"

###################################################################################################

[buildPlans.legetur.weights.book]
shape = 450
menu = 450
css = 450

# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
#             while "menu" only supports integers between 1 and 9 (inclusive).
#             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

[buildPlans.legetur.widths.normal]
#shape = 595        # Unit Width, measured in 1/1000 em.
# shape = 590        # Unit Width, measured in 1/1000 em.
shape = 600
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

# End width section
###################################################################################################

###################################################################################################
# Character Exclusion
# Specify character ranges in the section below to exclude certain characters from the font being
# built. Remove this section when this feature is not needed.

[buildPlans.legetur.exclude-chars]
ranges = [[10003, 10008]]

# End character exclusion
###################################################################################################

###################################################################################################
# Compatibility Ligatures
# Certain applications like Emacs does not support proper programming liagtures provided by
# OpenType, but can support ligatures provided by PUA codepoints. Therefore you can edit the
# following section to build PUA characters that are generated from the OpenType ligatures.
# Remove this section when compatibility ligatures are not needed.

[[buildPlans.legetur.compatibility-ligatures]]
unicode = 57600 # 0xE100
featureTag = 'calt'
sequence = '<*>'

# End compatibility ligatures section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

[buildPlans.legetur.metric-override]
# cap = 720                   # !!!
# ascender = 720              # !!!
cap = 712                   # !!!
ascender = 712              # !!!
#leading = 1150
leading = 1135
winMetricAscenderPad = 0
winMetricDescenderPad = 0
powerlineScaleY = 1
powerlineScaleX = 1
powerlineShiftY = 0
powerlineShiftX = 0
# xHeight = 555
xHeight = 537

# End metric override section
###################################################################################################